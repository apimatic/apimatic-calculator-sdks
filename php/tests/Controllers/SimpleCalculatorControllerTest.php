<?php
/*
 * APIMATICCalculatorLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace APIMATICCalculatorLib\Tests;

use APIMATICCalculatorLib\Exceptions\ApiException;
use APIMATICCalculatorLib\Exceptions;
use APIMATICCalculatorLib\ApiHelper;
use APIMATICCalculatorLib\Models;
use PHPUnit\Framework\TestCase;

class SimpleCalculatorControllerTest extends TestCase
{
    /**
     * @var \APIMATICCalculatorLib\Controllers\SimpleCalculatorController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getSimpleCalculatorController();
    }


    /**
     * Check if multiplication works
     */
    public function testMultiply()
    {
        // Parameters for the API call
        $input = array();
        $input['operation'] = Models\OperationTypeEnum::MULTIPLY;
        $input['x'] = 4;
        $input['y'] = 5;

        // Set callback and perform API call
        $result = null;
        try {
            $result = self::$controller->getCalculate($input);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");
 

        $this->assertEqualsWithDelta(
            20,
            $result,
            ASSERT_PRECISION,
            "Response does not match expected value"
        );
    }
}
